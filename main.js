!function(){"use strict";var e=document.querySelector(".profile__info-button"),t=(document.querySelector(".popup-opened"),document.querySelector(".form__fieldset")),n=document.querySelector(".form__input-name"),r=document.querySelector(".form__input-job"),o=(document.querySelector(".profile__info-name"),document.querySelector(".profile__info-text"),document.querySelector(".profile__button")),i=(document.querySelector(".overlay"),document.querySelector(".zoom-open"),document.querySelector(".popup_image"),document.querySelector(".formcard__fieldset")),u=document.querySelector(".popup__avatar-form"),c=document.querySelector(".profile__image-edit");function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,s(r.key),r)}}function s(e){var t=function(e,t){if("object"!=a(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=a(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==a(t)?t:t+""}var f=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._formElement=n,this._inputList=Array.from(n.querySelectorAll("input"))},(t=[{key:"_checkInputLength",value:function(e,t){return 0===e.value.trim().length?(t.textContent="Preencha este campo.",!1):e.value.trim().length<2?(t.textContent="O campo deve ter pelo menos 2 caracteres.",!1):(t.textContent="",!0)}},{key:"_checkInputValidity",value:function(e,t){return e.validity.valid?(t.textContent="",!0):(t.textContent=e.validationMessage,!1)}},{key:"_buttonState",value:function(){var e=this._formElement.querySelector(this._config.submitButtonSelector),t=this._formElement.querySelector(this._config.inputSelectorOne),n=this._formElement.querySelector(this._config.inputSelectorTwo),r=this._formElement.querySelector(this._config.errorClassOne),o=this._formElement.querySelector(this._config.errorClassTwo),i=!0,u=!0;t&&r&&(i=this._checkInputLength(t,r)),n&&o&&(u=this._checkInputLength(n,o)&&this._checkInputValidity(n,o)),e.disabled=!(i&&u)}},{key:"_clearErrorMessages",value:function(){var e=this._formElement.querySelector(this._config.errorClassOne),t=this._formElement.querySelector(this._config.errorClassTwo);e.textContent="",t.textContent=""}},{key:"_handleInputChange",value:function(){this._buttonState()}},{key:"_setEventListeners",value:function(){var e=this._formElement.querySelector(this._config.inputSelectorOne),t=this._formElement.querySelector(this._config.inputSelectorTwo);e&&e.addEventListener("input",this._handleInputChange()),t&&t.addEventListener("input",this._handleInputChange())}},{key:"enableValidation",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._handleInputChange()}))})),this._setEventListeners(),this._buttonState()}}])&&l(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,m(r.key),r)}}function m(e){var t=function(e,t){if("object"!=p(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=p(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==p(t)?t:t+""}var d=function(){return e=function e(t,n,r,o,i,u){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._likes=t.likes,this.owner=t.owner._id,this._cardId=t._id,this._data=t,this._dataTemplate=n,this._handleImagePopup=r,this._handleCardDelete=o,this._handleAddLike=i,this._handleRemoveLike=u},(t=[{key:"_getTemplate",value:function(){return document.querySelector("#template").content.querySelector(".elements__card").cloneNode(!0)}},{key:"removeElement",value:function(){this._element.remove()}},{key:"_setEventListeners",value:function(){var e=this;this._trash(),this._element.querySelector(".elements__card-image").addEventListener("click",(function(){e._handleImagePopup(e._link,e._name)})),this._element.querySelector(".elements__like-button").addEventListener("click",(function(){e._likedButton()}))}},{key:"generateCard",value:function(){this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".elements__card-name").textContent=this._name,this._element.querySelector(".elements__like-counter").textContent=this._likes.length;var e=this._element.querySelector(".elements__card-image");return e.setAttribute("src",this._link),e.setAttribute("alt",this._name),"40bf3b12a3d0fe74bfbe12d1"===this.owner&&this._element.querySelector(".elements__delete-button").classList.add("elements__delete-button-hidden"),this.isLiked()&&this._element.querySelector(".elements__like-button").classList.add("elements__like-button_press"),this._element}},{key:"isLiked",value:function(){return this._likes.find((function(e){return"40bf3b12a3d0fe74bfbe12d1"===e._id}))}},{key:"_likedButton",value:function(){var e=this,t=this._element.querySelector(".elements__like-button"),n=this._element.querySelector(".elements__like-counter");this.isLiked()?this._handleRemoveLike(this._cardId).then((function(r){t.classList.remove("elements__like-button_press"),n.textContent=r.likes.length,e._likes=r.likes})):this._handleAddLike(this._cardId).then((function(r){t.classList.add("elements__like-button_press"),n.textContent=r.likes.length,e._likes=r.likes}))}},{key:"_trash",value:function(){var e=this;this._element.querySelector(".elements__delete-button").addEventListener("click",(function(){e._handleCardDelete()}))}}])&&y(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,v(r.key),r)}}function v(e){var t=function(e,t){if("object"!=b(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=b(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==b(t)?t:t+""}var _=function(){return e=function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._list=document.querySelector(n)},(t=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){return e.addItem(t)}))}},{key:"addElement",value:function(e){this._list.prepend(e)}},{key:"addItem",value:function(e){var t=this._renderer(e);this._list.append(t)}}])&&h(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,g(r.key),r)}}function g(e){var t=function(e,t){if("object"!=S(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=S(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==S(t)?t:t+""}var w=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t)},(t=[{key:"open",value:function(){this._popup.classList.add("popup-opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup-opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&Array.from(document.querySelectorAll(".popup")).forEach((function(e){e.classList.remove("popup-opened")}))}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__close").addEventListener("click",(function(){return e.close()})),document.addEventListener("keydown",this._handleEscClose),this._popup.firstElementChild.addEventListener("click",(function(){e.close()}))}}])&&k(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,O(r.key),r)}}function O(e){var t=function(e,t){if("object"!=E(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=E(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==E(t)?t:t+""}function P(e,t,n){return t=q(t),function(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,C()?Reflect.construct(t,n||[],q(e).constructor):t.apply(e,n))}function C(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(C=function(){return!!e})()}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},L.apply(this,arguments)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}function T(e,t){return T=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},T(e,t)}var I=function(e){function t(e,n,r){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(o=P(this,t,[r]))._popup=document.querySelector(r),o._imageSelector=o._popup.querySelector(e),o._titleSelector=o._popup.querySelector(n),o}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&T(e,t)}(t,e),n=t,(r=[{key:"close",value:function(){L(q(t.prototype),"close",this).call(this)}},{key:"open",value:function(e,n){this._imageSelector.src=e,this._imageSelector.alt=n,this._titleSelector.textContent=n,L(q(t.prototype),"open",this).call(this)}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__close").addEventListener("click",(function(){return e.close()})),this._popup.firstElementChild.addEventListener("click",(function(){e.close()}))}}])&&j(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(w);function x(e){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},x(e)}function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,R(r.key),r)}}function R(e){var t=function(e,t){if("object"!=x(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=x(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==x(t)?t:t+""}function B(e,t,n){return t=z(t),function(e,t){if(t&&("object"===x(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,A()?Reflect.construct(t,n||[],z(e).constructor):t.apply(e,n))}function A(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(A=function(){return!!e})()}function D(){return D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=z(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},D.apply(this,arguments)}function z(e){return z=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},z(e)}function V(e,t){return V=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},V(e,t)}var N=function(e){function t(e,n,r){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(o=B(this,t,[e]))._submitCallBack=n,o._formElement=document.querySelector(r),o}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&V(e,t)}(t,e),n=t,(r=[{key:"_getInputValues",value:function(){var e=Array.from(this._formElement.querySelectorAll("input")),t={};return e.forEach((function(e){t[e.name]=e.value})),t}},{key:"_loading",value:function(e){e&&(this._submitCallBack.textContent="Salvando...")}},{key:"setEventListeners",value:function(){var e=this;D(z(t.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault();var n=e._getInputValues();e._submitCallBack(n),e._loading(!0),e.close(),e.reset()}))}},{key:"close",value:function(){D(z(t.prototype),"close",this).call(this)}},{key:"reset",value:function(){this._formElement.reset()}}])&&U(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(w);function J(e){return J="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},J(e)}function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,M(r.key),r)}}function M(e){var t=function(e,t){if("object"!=J(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=J(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==J(t)?t:t+""}function F(e,t,n){return t=Q(t),function(e,t){if(t&&("object"===J(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,G()?Reflect.construct(t,n||[],Q(e).constructor):t.apply(e,n))}function G(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(G=function(){return!!e})()}function K(){return K="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=Q(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},K.apply(this,arguments)}function Q(e){return Q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Q(e)}function W(e,t){return W=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},W(e,t)}var X=function(e){function t(e){var n,r=e.popupSelector,o=e.submitCallback;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=F(this,t,[r]))._submitCallback=o,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&W(e,t)}(t,e),n=t,(r=[{key:"open",value:function(e){this._card=e,K(Q(t.prototype),"open",this).call(this)}},{key:"setEventListeners",value:function(){var e=this;K(Q(t.prototype),"setEventListeners",this).call(this),document.querySelector(".popup-confirm__btn").addEventListener("click",(function(t){t.preventDefault(),e._submitCallback(e._card).then((function(){e.close()}))}))}}])&&H(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(w);function Y(e){return Y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Y(e)}function Z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,$(r.key),r)}}function $(e){var t=function(e,t){if("object"!=Y(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=Y(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Y(t)?t:t+""}var ee=function(){return e=function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(n),this._avatarElement=document.querySelector(r)},(t=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,job:this._jobElement.textContent,avatar:this._avatarElement.src}}},{key:"setUserInfo",value:function(e,t,n){this._nameElement.textContent=e,this._jobElement.textContent=t,this._avatarElement.src=n}}])&&Z(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function te(e){return te="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},te(e)}function ne(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,re(r.key),r)}}function re(e){var t=function(e,t){if("object"!=te(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=te(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==te(t)?t:t+""}var oe=new(function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers},(t=[{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"editUserInfo",value:function(e,t){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addCard",value:function(e){var t=e.name,n=e.link;return console.log(this._baseUrl),fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:n})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addLikes",value:function(e){return fetch("https://around.nomoreparties.co/v1/web-ptbr-cohort-10/cards/likes/".concat(e),{method:"PUT",headers:{authorization:"cc445779-d6db-4667-8701-d2576b6346ad","Content-Type":"application/json"}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"removeLike",value:function(e){return fetch("https://around.nomoreparties.co/v1/web-ptbr-cohort-10/cards/likes/".concat(e),{method:"DELETE",headers:{authorization:"cc445779-d6db-4667-8701-d2576b6346ad","Content-Type":"application/json"}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"removeCard",value:function(e){return fetch("https://around.nomoreparties.co/v1/web-ptbr-cohort-10/cards/likes/".concat(e),{method:"DELETE",headers:{authorization:"cc445779-d6db-4667-8701-d2576b6346ad","Content-Type":"application/json"}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"editAvatar",value:function(e){var t=e.avatar;return fetch("https://around.nomoreparties.co/v1/web-ptbr-cohort-10/users/me/avatar",{method:"PATCH",headers:{authorization:"cc445779-d6db-4667-8701-d2576b6346ad","Content-Type":"application/json"},body:JSON.stringify({avatar:t})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}])&&ne(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}())({baseUrl:"https://around.nomoreparties.co/v1/web-ptbr-cohort-10",headers:{authorization:"cc445779-d6db-4667-8701-d2576b6346ad","Content-Type":"application/json"}});new f({inputSelectorOne:".form__input-name",inputSelectorTwo:".form__input-job",submitButtonSelector:".form__submit",errorClassOne:".form__input-name-error",errorClassTwo:".form__input-job-error"},t).enableValidation(),new f({inputSelectorOne:".formcard__input-title",inputSelectorTwo:".formcard__input-link",submitButtonSelector:".formcard__submit",errorClassOne:".formcard__input-title-error",errorClassTwo:".formcard__input-link-error"},i).enableValidation(),new f({inputSelectorTwo:".popup__avatar-input",submitButtonSelector:".popup__avatar-submit",errorClassTwo:".popup__avatar-input-error"},u).enableValidation();var ie=new X({popupSelector:"#popup-confirm",submitCallback:function(e){return oe.removeCard(e._cardId).then((function(){e.removeElement()})).catch((function(e){console.log(e)}))}});ie.setEventListeners();var ue=new ee(".profile__info-name",".profile__info-text",".profile__image");oe.getUserInfo().then((function(e){var t=e.name,n=e.about,r=e.avatar;ue.setUserInfo(t,n,r)})).catch((function(e){console.log(e)}));var ce=new N("#popup-user",(function(e){var t=e.name,n=e.about;oe.editUserInfo(t,n);var r=ue.getUserInfo().avatar;ue.setUserInfo(t,n,r)}),".form__fieldset");e.addEventListener("click",(function(){var e=new ee(".profile__info-name",".profile__info-text").getUserInfo(),t=e.name,o=e.job;n.value=t,r.value=o,ce.open()})),ce.setEventListeners();var ae=new N("#popup-avatar",(function(e){var t=e.image;oe.editAvatar({avatar:document.querySelector(".popup__avatar-input").value});var n=ue.getUserInfo(),r=n.name,o=n.about;ue.setUserInfo(r,o,t)}),".popup__avatar-form");ae.setEventListeners(),c.addEventListener("click",(function(){ae.open()})),oe.getInitialCards().then((function(e){new _({items:e,renderer:function(e){var t=new d(e,document.querySelector("#template"),(function(e,t){se.open(e,t),se.setEventListeners()}),(function(){ie.open(t)}),oe.addLikes,oe.removeLike);return t.generateCard()}},".elements").renderItems()})).catch((function(e){console.log(e)}));var le=new N(".popup_add",(function(){oe.addCard({name:document.querySelector(".formcard__input-title").value,link:document.querySelector(".formcard__input-link").value}).then((function(e){var t;document.querySelector(".elements__card").prepend((t=new d(e,"#template",(function(e,t){se.open(e,t),se.setEventListeners()}),(function(){ie.open(t)}),oe.addLikes.bind(oe),oe.removeLike.bind(oe))).generateCard())}))}),".formcard__fieldset");le.setEventListeners(),o.addEventListener("click",(function(){le.reset(),le.open()}));var se=new I(".popup__zoom-image",".popup__zoom-text",".popup_image")}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,